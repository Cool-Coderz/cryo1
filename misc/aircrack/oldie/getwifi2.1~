#!/bin/bash
ethfile="/var/run/dhcpcd-eth1.pid"
timeout=10

if [ $# -gt 0 ];
  then
  PAR1=$1
else
  PAR1="-a"
fi

echo "par:"$PAR1


#-----------killing current connections---------#
echo "========killing current connections======="
echo "Searching for current connections..."
if [ -f $ethfile ]; 
  then
  echo "Found connection... killing connection... "
  ifconfig eth1 down
  kill `cat $ethfile`
  rm -f $ethfile
  if [ -f $ethfile ];
    then
    echo "error"
  else
    echo "previous connection killed."
  fi
else
  echo "!found"
fi
echo "==========================================="


if [ $PAR1 == "-a" ]; # || $PAR1 == "-[sS]" ];
  then
#---------scanning for secure familiar wifi connection-------#
net=( `iwlist eth1 scanning | grep -B4 key:on | grep ESSID | grep -v "'" | sed -e 's/ESSID:"//g;s/"//g;s/<hidden>//g'` )
echo "~~~"
echo "Checking for familiar secure sites.... found("${#net[*]}")"

netstatus=0
for j in ${net[*]} 
    do
    
    if [ $netstatus = 0 ]; then
       if [ `echo $j | grep sofaking` ]; then    
    	  echo "--Found and trying MC-"$j
    	  ifconfig eth1 up
    	  iwconfig eth1 essid sofaking channel 10 key 86638796162122140561333170
	  dhcpcd eth1 -t timeout
	  if [ $ethfile -f ]; then
	     echo "MC connected... "
	     echo $j"::Connected:Secure" >> getwifi_log
	     $netstatus=1
	  else
	     echo "MC failed!"
	     echo $j"::Failed:Secure" >> getwifi_log
	  fi
       else
          echo "--Found "$j" - not familiar"
	  echo $j"::Unknown:Secure" >> getwifi_log
       fi
    else
       echo $j"::Failed:Secure" >> getwifi_log
    fi
done
if [ $netstatus = 1 ]; then 
    exit 1 
fi

fi
#----end of secure connects---------




#---------scanning for unsecure wifi CNs------------------#
#net=( `iwlist eth1 scanning | grep -B4 key:off | grep ESSID | sed -e 's/ESSID:"//g;s/"//g;s/<hidden>//g'` )
#

#chk=`find $ethfile`
#echo "Connections Found: "${#net[*]}
#echo "=============testing============="
#if [ -f $ethfile ]; then
#    echo "connection found.  killing connection..."
#    ifconfig eth1 down
#    kill `cat $ethfile`
#    echo "removing file..."
#    rm -f $ethfile
#    echo "checking for file again..."
#    if [ $ethfile -f ] ;
#        then
#        echo "file remains, houston we have a problem" 
#    else
#        echo "file all gone"
#    fi
#else
#    ifconfig eth1 up
#fi

#for j in ${net[*]}
#  do
#  echo "Checking "${net[j]}   
#  if [ `echo ${net[j]} | grep sofaking` ]; then 
#      iwconfig eth1 essid sofaking channel 10 key 86638796162122140561333170
#      dhcpcd eth1
#      if [ $ethfile -f ]; 
#        then
#        echo "modcon connected."
#        exit 1
#      else
#        echo "not connected, moving on."
#      fi
#  else
#      echo "No familiar connections"
#  fi
#
#done

#exit 1

#echo "=============end test============"

if [ $PAR1 == "-a" ]; #|| $PAR1 == "-[uU]" ];
  then
#---------scanning for unsecure wifi CNs------------------#


scan=( `iwlist eth1 scanning | grep -B5 key:off` )
echo "{"${#scan[*]}"}"

cnt[0]=""
t=0
h=0
for q in ${scan[*]}
  do
    echo $q
    cnt[$h]=${cnt[$h]}$q" "
    #echo ${cnt[$h]}

    #if [ `echo $q | grep ago` ];
    #	then	   	
    #echo "cnt("$h"):"${cnt[$h]}
    #	let "h += 1"
    #fi

    if [ $t == 30 ];
      then
    #    echo "end: "${cnt[$h]}
    	exit 1
    fi
    let "t += 1"
done
exit 1


net=( `$scan | grep -B4 key:off | grep ESSID | sed -e 's/ESSID:"//g;s/"//g;s/<hidden>//g'` )
#mac=( `$scan | grep -B4 key:off | grep Address | sed -e 's/Address://g'` )



net=( `iwlist eth1 scanning | grep -B4 key:off | grep ESSID | sed -e 's/ESSID:"//g;s/"//g;s/<hidden>//g'` )


echo "~~~"
echo "Checking for u.s.... found("${#net[*]}")" 
if [ ${#net[*]} -gt 1  ] 
    then 
    for i in ${net[*]} 
      do 
      echo ""
      echo "_______________________"
      echo "+Checking device: ("$i") ..."
      echo " --setting iwconfig..."
      iwconfig eth1 essid $i
      echo " --trying connection to "$i
   
      dhcpcd eth1 -t $timeout
      myip=`route -n | grep eth1 | grep -v UG | awk '{print $1}'`
      if [ ${#myip} -gt 5  ]; then	
          echo " --+---Connected!!  :p"
          newip=`ifconfig eth1 | grep Bcast | awk '{print $2}' | sed -e 's/addr://g'`
          echo " --+---your IP is "$newip
	  echo $i":"$newip":Connected:!secure" >> getwifi_log
          exit 1
      fi
      echo " --Connection Failed. :(  Searching for more.."
      echo $i":"":Failed:!secure" >> getwifi_log
    done
fi
fi
echo "No connections successful, please try again."
exit 0
